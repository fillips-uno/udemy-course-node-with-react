const GoogleStrategy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const passport = require('passport');
const keys = require('../config/keys');

const User = mongoose.model('users');

passport.serializeUser((user, done) => {
    console.log('user: ', user)
    // user may not have google id. All will have the id automatically generated by mongo
    // null because we're not dealing with an error case here
    done(null, user.id);
});

passport.deserializeUser((id, done) => {
    User.findById(id).then((user) => {
        done(null, user);
    });
})

passport.use(
    new GoogleStrategy({
        clientID: keys.googleClientID,
        clientSecret: keys.googleClientSecret,
        callbackURL: '/auth/google/callback', 
        proxy: true
    }, 
    (accessToken, refreshToken, profile, done) => {
        User.findOne({ googleID: profile.id }).then(existingUser => {
            if (existingUser) {
                done(null, existingUser);
            } else {
                new User({ googleID: profile.id }).save().then(user => done(null, user));
            }
        })
    })
);